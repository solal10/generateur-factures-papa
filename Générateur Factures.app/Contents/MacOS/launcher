#!/bin/bash

# Create comprehensive debug log
LOG_FILE="/tmp/app_bundle_debug.log"
exec > "$LOG_FILE" 2>&1

echo "=== APP BUNDLE DEBUG LOG ==="
echo "Timestamp: $(date)"
echo "Script: $0"
echo "Arguments: $@"
echo ""

# Log environment
echo "=== ENVIRONMENT ==="
echo "PATH: $PATH"
echo "PWD: $PWD"
echo "USER: $USER"
echo "HOME: $HOME"
echo ""

# Find the directory containing all the app files
echo "=== PATH RESOLUTION ==="
SCRIPT_DIR="$(cd "$(dirname "$0")" && pwd)"
echo "Script directory: $SCRIPT_DIR"

APP_DIR="$(cd "$SCRIPT_DIR/../../.." && pwd)"
echo "App directory: $APP_DIR"

# Validate directory structure
echo ""
echo "=== DIRECTORY VALIDATION ==="
echo "Script dir exists: $([ -d "$SCRIPT_DIR" ] && echo "YES" || echo "NO")"
echo "App dir exists: $([ -d "$APP_DIR" ] && echo "YES" || echo "NO")"
echo "Contents of app dir:"
ls -la "$APP_DIR" 2>/dev/null || echo "ERROR: Cannot list app directory"

# Check for required files
echo ""
echo "=== FILE VALIDATION ==="
echo "run_gui.py exists: $([ -f "$APP_DIR/run_gui.py" ] && echo "YES" || echo "NO")"
echo "pdf_filler.py exists: $([ -f "$APP_DIR/pdf_filler.py" ] && echo "YES" || echo "NO")"
echo "venv exists: $([ -d "$APP_DIR/venv" ] && echo "YES" || echo "NO")"

# Check Python availability
echo ""
echo "=== PYTHON VALIDATION ==="
echo "which python3: $(which python3 2>/dev/null || echo "NOT FOUND")"
echo "python3 version: $(python3 --version 2>/dev/null || echo "ERROR")"
echo "/usr/bin/python3 exists: $([ -f "/usr/bin/python3" ] && echo "YES" || echo "NO")"

# Try to run the wrapper
echo ""
echo "=== RUNNING WRAPPER ==="
if [ -f "$APP_DIR/run_gui.py" ]; then
    echo "Attempting to run: python3 $APP_DIR/run_gui.py"
    
    # Try with full path first
    if [ -f "/usr/bin/python3" ]; then
        echo "Using /usr/bin/python3..."
        /usr/bin/python3 "$APP_DIR/run_gui.py"
        EXIT_CODE=$?
    else
        echo "Using python3 from PATH..."
        python3 "$APP_DIR/run_gui.py"
        EXIT_CODE=$?
    fi
    
    echo "Python exit code: $EXIT_CODE"
else
    echo "ERROR: run_gui.py not found"
    EXIT_CODE=1
fi

echo ""
echo "=== FINAL STATUS ==="
echo "Launcher exit code: $EXIT_CODE"
echo "Log saved to: $LOG_FILE"

# Show error dialog if something went wrong
if [ $EXIT_CODE -ne 0 ]; then
    osascript -e "display alert \"Erreur de lancement\" message \"L'application n'a pas pu d√©marrer. Consultez le fichier de log: $LOG_FILE\" as critical"
fi

exit $EXIT_CODE